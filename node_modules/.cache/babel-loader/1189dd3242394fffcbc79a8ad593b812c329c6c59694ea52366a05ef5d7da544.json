{"ast":null,"code":"var _jsxFileName = \"/home/karuiru/Frontend Engineer/React Book Projects/Hotel-Review-App/src/context/ReviewsContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useCallback, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ReviewsContext = /*#__PURE__*/createContext();\nconst initialState = {\n  reviews: [],\n  loading: true,\n  error: ''\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'GET_REVIEWS_SUCCESS':\n      return {\n        ...state,\n        reviews: action.payload,\n        loading: false\n      };\n    case 'GET_REVIEWS_ERROR':\n      return {\n        ...state,\n        reviews: [],\n        loading: false,\n        error: action.payload\n      };\n    case 'ADD_REVIEW_SUCCESS':\n      return {\n        ...state,\n        reviews: [...state.reviews, action.payload],\n        loading: false,\n        isAdded: true\n      };\n    default:\n      return state;\n  }\n};\nexport const ReviewsContextProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const fetchReviews = useCallback(async hotelId => {\n    try {\n      const data = await fetch(`https://my-json-server.typicode.com/PacktPublishing/React-Projects-Second-Edition/hotels/${hotelId}/reviews`);\n      const result = await data.json();\n      if (result) {\n        dispatch({\n          type: 'GET_REVIEWS_SUCCESS',\n          payload: result\n        });\n      }\n    } catch (e) {\n      dispatch({\n        type: 'GET_REVIEWS_ERROR',\n        payload: e.message\n      });\n    }\n  }, []);\n  const addReview = useCallback(async ({\n    hotelId,\n    title,\n    description,\n    rating\n  }) => {\n    const reviewId = Math.floor(Math.random() * 100);\n    try {\n      const data = await fetch(`https://my-json-server.typicode.com/PacktPublishing/React-Projects-Second-Edition/reviews`, {\n        method: 'POST',\n        body: JSON.stringify({\n          id: reviewId,\n          hotelId,\n          title,\n          description,\n          rating\n        })\n      });\n      const result = await data.json();\n      if (result) {\n        dispatch({\n          type: 'ADD_REVIEW_SUCCESS',\n          payload: {\n            id: reviewId,\n            hotelId,\n            title,\n            description,\n            rating\n          }\n        });\n      }\n    } catch {}\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ReviewsContext.Provider, {\n    value: {\n      ...state,\n      fetchReviews,\n      addReview\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewsContextProvider, \"4JQLbm/D+82g1OZ6tzlI5TJrLnQ=\");\n_c = ReviewsContextProvider;\nexport default ReviewsContext;\nvar _c;\n$RefreshReg$(_c, \"ReviewsContextProvider\");","map":{"version":3,"names":["createContext","useCallback","useReducer","jsxDEV","_jsxDEV","ReviewsContext","initialState","reviews","loading","error","reducer","state","action","type","payload","isAdded","ReviewsContextProvider","children","_s","dispatch","fetchReviews","hotelId","data","fetch","result","json","e","message","addReview","title","description","rating","reviewId","Math","floor","random","method","body","JSON","stringify","id","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/karuiru/Frontend Engineer/React Book Projects/Hotel-Review-App/src/context/ReviewsContext.js"],"sourcesContent":["import { createContext, useCallback, useReducer } from 'react';\n\nexport const ReviewsContext = createContext();\n\nconst initialState = {\n  reviews: [],\n  loading: true,\n  error: '',\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'GET_REVIEWS_SUCCESS':\n      return {\n        ...state,\n        reviews: action.payload,\n        loading: false,\n      };\n    case 'GET_REVIEWS_ERROR':\n      return {\n        ...state,\n        reviews: [],\n        loading: false,\n        error: action.payload,\n      };\n    case 'ADD_REVIEW_SUCCESS':\n      return {\n        ...state,\n        reviews: [...state.reviews, action.payload],\n        loading: false,\n        isAdded: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const ReviewsContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const fetchReviews = useCallback(async (hotelId) => {\n    try {\n      const data = await fetch(\n        `https://my-json-server.typicode.com/PacktPublishing/React-Projects-Second-Edition/hotels/${hotelId}/reviews`,\n      );\n      const result = await data.json();\n\n      if (result) {\n        dispatch({ type: 'GET_REVIEWS_SUCCESS', payload: result });\n      }\n    } catch (e) {\n      dispatch({ type: 'GET_REVIEWS_ERROR', payload: e.message });\n    }\n  }, []);\n\n  const addReview = useCallback(\n    async ({ hotelId, title, description, rating }) => {\n      const reviewId = Math.floor(Math.random() * 100);\n\n      try {\n        const data = await fetch(\n          `https://my-json-server.typicode.com/PacktPublishing/React-Projects-Second-Edition/reviews`,\n          {\n            method: 'POST',\n            body: JSON.stringify({\n              id: reviewId,\n              hotelId,\n              title,\n              description,\n              rating,\n            }),\n          },\n        );\n        const result = await data.json();\n\n        if (result) {\n          dispatch({\n            type: 'ADD_REVIEW_SUCCESS',\n            payload: {\n              id: reviewId,\n              hotelId,\n              title,\n              description,\n              rating,\n            },\n          });\n        }\n      } catch {}\n    },\n    [],\n  );\n\n  return (\n    <ReviewsContext.Provider value={{ ...state, fetchReviews, addReview }}>\n      {children}\n    </ReviewsContext.Provider>\n  );\n};\n\nexport default ReviewsContext;\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,WAAW,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,OAAO,MAAMC,cAAc,gBAAGL,aAAa,CAAC,CAAC;AAE7C,MAAMM,YAAY,GAAG;EACnBC,OAAO,EAAE,EAAE;EACXC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,qBAAqB;MACxB,OAAO;QACL,GAAGF,KAAK;QACRJ,OAAO,EAAEK,MAAM,CAACE,OAAO;QACvBN,OAAO,EAAE;MACX,CAAC;IACH,KAAK,mBAAmB;MACtB,OAAO;QACL,GAAGG,KAAK;QACRJ,OAAO,EAAE,EAAE;QACXC,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEG,MAAM,CAACE;MAChB,CAAC;IACH,KAAK,oBAAoB;MACvB,OAAO;QACL,GAAGH,KAAK;QACRJ,OAAO,EAAE,CAAC,GAAGI,KAAK,CAACJ,OAAO,EAAEK,MAAM,CAACE,OAAO,CAAC;QAC3CN,OAAO,EAAE,KAAK;QACdO,OAAO,EAAE;MACX,CAAC;IACH;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMK,sBAAsB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACP,KAAK,EAAEQ,QAAQ,CAAC,GAAGjB,UAAU,CAACQ,OAAO,EAAEJ,YAAY,CAAC;EAE3D,MAAMc,YAAY,GAAGnB,WAAW,CAAC,MAAOoB,OAAO,IAAK;IAClD,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMC,KAAK,CACtB,4FAA4FF,OAAO,UACrG,CAAC;MACD,MAAMG,MAAM,GAAG,MAAMF,IAAI,CAACG,IAAI,CAAC,CAAC;MAEhC,IAAID,MAAM,EAAE;QACVL,QAAQ,CAAC;UAAEN,IAAI,EAAE,qBAAqB;UAAEC,OAAO,EAAEU;QAAO,CAAC,CAAC;MAC5D;IACF,CAAC,CAAC,OAAOE,CAAC,EAAE;MACVP,QAAQ,CAAC;QAAEN,IAAI,EAAE,mBAAmB;QAAEC,OAAO,EAAEY,CAAC,CAACC;MAAQ,CAAC,CAAC;IAC7D;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,SAAS,GAAG3B,WAAW,CAC3B,OAAO;IAAEoB,OAAO;IAAEQ,KAAK;IAAEC,WAAW;IAAEC;EAAO,CAAC,KAAK;IACjD,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IAEhD,IAAI;MACF,MAAMb,IAAI,GAAG,MAAMC,KAAK,CACtB,2FAA2F,EAC3F;QACEa,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,EAAE,EAAER,QAAQ;UACZX,OAAO;UACPQ,KAAK;UACLC,WAAW;UACXC;QACF,CAAC;MACH,CACF,CAAC;MACD,MAAMP,MAAM,GAAG,MAAMF,IAAI,CAACG,IAAI,CAAC,CAAC;MAEhC,IAAID,MAAM,EAAE;QACVL,QAAQ,CAAC;UACPN,IAAI,EAAE,oBAAoB;UAC1BC,OAAO,EAAE;YACP0B,EAAE,EAAER,QAAQ;YACZX,OAAO;YACPQ,KAAK;YACLC,WAAW;YACXC;UACF;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,MAAM,CAAC;EACX,CAAC,EACD,EACF,CAAC;EAED,oBACE3B,OAAA,CAACC,cAAc,CAACoC,QAAQ;IAACC,KAAK,EAAE;MAAE,GAAG/B,KAAK;MAAES,YAAY;MAAEQ;IAAU,CAAE;IAAAX,QAAA,EACnEA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAAC5B,EAAA,CA5DWF,sBAAsB;AAAA+B,EAAA,GAAtB/B,sBAAsB;AA8DnC,eAAeX,cAAc;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}